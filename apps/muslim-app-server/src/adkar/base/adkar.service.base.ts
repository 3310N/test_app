/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Adkar as PrismaAdkar } from "@prisma/client";

export class AdkarServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.AdkarCountArgs, "select">): Promise<number> {
    return this.prisma.adkar.count(args);
  }

  async adkars<T extends Prisma.AdkarFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.AdkarFindManyArgs>
  ): Promise<PrismaAdkar[]> {
    return this.prisma.adkar.findMany<Prisma.AdkarFindManyArgs>(args);
  }
  async adkar<T extends Prisma.AdkarFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.AdkarFindUniqueArgs>
  ): Promise<PrismaAdkar | null> {
    return this.prisma.adkar.findUnique(args);
  }
  async createAdkar<T extends Prisma.AdkarCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AdkarCreateArgs>
  ): Promise<PrismaAdkar> {
    return this.prisma.adkar.create<T>(args);
  }
  async updateAdkar<T extends Prisma.AdkarUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AdkarUpdateArgs>
  ): Promise<PrismaAdkar> {
    return this.prisma.adkar.update<T>(args);
  }
  async deleteAdkar<T extends Prisma.AdkarDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.AdkarDeleteArgs>
  ): Promise<PrismaAdkar> {
    return this.prisma.adkar.delete(args);
  }
}
